global !p

def complete(t, opts):
	if t:
		opts = [ m[ len(t): ] for m in opts if m.startswith(t) ]
	if len(opts) == 1:
		return opts[0]
	if len(opts) == 0:
		return ""
	else:
		return "(" + '|'.join(opts) + ')'

endglobal

snippet "^fdisk" "" Ar
sudo fdisk -${1:l}
endsnippet

# "^snippet" mount "" Ar
# sudo mount
# endsnippet

# "^snippet" umount "" Ar
# sudo umount
# endsnippet

snippet "^reboot" "" Ar
sudo reboot
endsnippet

snippet "^sb" "" Ar
`case "$SHELL" in *zsh*) echo source ~/.zshrc;; *) echo source ~/.bashrc;; esac`
endsnippet

snippet "^ll" "" Ar
ls -${2:lah}${1}
endsnippet

snippet "^octave" "" Ar
octave ${1:--no-gui}
endsnippet

snippet "^matlab" "" Ar
matlab ${1:-nodesktop}
endsnippet

snippet "^mux" "" Ar
tmuxinator
endsnippet

snippet "^"git" submodule init" "" Ar
git submodule init && git submodule update
endsnippet

snippet "^"git" sup" "" Ar
git submodule update --init --recursive
endsnippet

snippet "^gs" "" Ar
git status
endsnippet

snippet "^grep ( )*" "" Ar
grep ${2:-nRi -e} "${1}"
endsnippet

snippet "^gcom " "" Ar
git commit -m "${1}"
endsnippet

snippet "^goto" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/goto "goal: [${2:0}, ${3:0}, ${4:1.5}, ${5:0.0}]"
endsnippet

snippet "^gofcu" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/goto_fcu "goal: [${2:0}, ${3:0}, ${4:0.0}, ${5:0.0}]"
endsnippet

snippet "^gorel" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/goto_relative "goal: [${3:0}, ${4:0}, ${5:0}, ${6:0}]"
endsnippet

snippet "^goal" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/goto_altitude ${2:3.0}
endsnippet

snippet "(^setyaw)|(^setheading)" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/set_heading "goal: ${2:0.0}"
endsnippet

snippet "^trackermpc" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/switch_tracker MpcTracker
endsnippet

snippet "^trackerflip" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/switch_tracker FlipTracker
endsnippet

snippet "^trackerspeed" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/switch_tracker SpeedTracker
endsnippet

snippet "^trackerline" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/switch_tracker LineTracker
endsnippet

snippet "^joystick" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/use_joystick
endsnippet

snippet "^hover" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/hover
endsnippet

snippet "^ehover" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/ehover
endsnippet

snippet "^motors" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/motors ${2:1}
endsnippet

snippet "^land" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/uav_manager/land
endsnippet

snippet "^eland" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/eland
endsnippet

snippet "^takeoff" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/uav_manager/takeoff
endsnippet

snippet "^nsf" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/switch_controller NsfController
endsnippet

snippet "^failsafe" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/failsafe_escalating
endsnippet

snippet "^flip" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/flip_tracker/flip
endsnippet

snippet "^(so3)|(se3)" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/switch_controller Se3Controller
endsnippet

snippet "^mpc" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/switch_controller MpcController
endsnippet

snippet "^attitude" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/switch_controller AttitudeController
endsnippet

snippet "^gppo" "" Ar
git pull ${1:origin} ${2:`git branch | grep \* | sed 's/\* \([a-Z]*\)/\1/'`} && git push $1 $2
endsnippet

snippet "^gppl" "" Ar
git pull ${1:local} ${2:`git branch | grep \* | sed 's/\* \([a-Z]*\)/\1/'`} && git push $1 $2
endsnippet

snippet "for( )*" "" ir
for ${1}; do ${2:${VISUAL}}; done
endsnippet

snippet "while( )*" "" ir
while ${1}; do ${2:${VISUAL}}; done
endsnippet

snippet "if( )*" "" ir
if ${1}; then ${2:${VISUAL}}; fi
endsnippet

snippet "ife( )*" "" ir
if ${1}; then ${2:${VISUAL}}; else fi
endsnippet

snippet "ifei( )*" "" ir
if ${1}; then ${2:${VISUAL}}; elif ${3}; then ${4} fi
endsnippet

# this part contains python snippets which rely on global complete function

# snippet "^git checkout $" "" Ar
# git checkout $1`!p
# from git import Repo
# try:
# 	r = Repo(path, search_parent_directories=True)
# except:
# 	snip.rv=" # not a git repo"
# else:
# 	repo_heads = r.heads
# 	repo_heads_names = [h.name for h in repo_heads]
# 	snip.rv=complete(t[1], repo_heads_names)
# `
# endsnippet

# snippet "^git pull( )+" "" Ar
# git pull ${1:origin} ${2:`git branch | grep \* | sed 's/\* \([a-Z]*\)/\1/'`}${3:`!p
# from git import Repo
# try:
# 	r = Repo(path, search_parent_directories=True)
# except:
# 	snip.rv=" # not a git repo"
# else:
# 	repo_heads = r.heads
# 	repo_heads_names = [h.name for h in repo_heads]
# 	snip.rv=complete(t[2], repo_heads_names)
# `
# }
# endsnippet

# snippet "^git push( )+" "" Ar
# git push ${1:origin} ${2:`git branch | grep \* | sed 's/\* \([a-Z]*\)/\1/'`}${3:`!p
# from git import Repo
# try:
# 	r = Repo(path, search_parent_directories=True)
# except:
# 	snip.rv=" # not a git repo"
# else:
# 	repo_heads = r.heads
# 	repo_heads_names = [h.name for h in repo_heads]
# 	snip.rv=complete(t[2], repo_heads_names)
# `
# }
# endsnippet

# snippet "^rostopic $" "" Ar
# rostopic $1`!p
# snip.rv=complete(t[1], ["echo", "list", "hz", "type"])`
# endsnippet

snippet "^cdsim" "" Ar
cd ~/git/simulation/start_simulation/
endsnippet

snippet "^cdcore" "" Ar
cd ~/mrs_workspace/src/uav_core/ros_nodes
endsnippet

snippet "^cdmodules" "" Ar
cd ~/mrs_workspace/src/uav_modules/ros_nodes/
endsnippet

snippet "^glog" "" Ar
git log --graph --abbrev-commit --date=relative --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
endsnippet

snippet "^c*matrix" "" Ar
cmatrix -a -b -C blue -u 3
endsnippet

snippet "^(cd\.\.)|(cd\.\ \.)" "" Ar
cd ..
endsnippet

snippet "^(hopt)|(htpo)" "" Ar
htop
endsnippet

snippet "^untar $" "" Ar
tar -xvf
endsnippet

snippet "^okular$" "" Ar
okular --presentation
endsnippet

snippet "^(open )" "" Ar
gnome-ope
endsnippet

snippet "^(gcgppo)|(cggpo)" "" Ar
git commit -m "${1:${VISUAL}}" ${2:-a} && git pull ${3:origin} ${4:`git branch | grep \* | sed 's/\* \([a-Z]*\)/\1/'`} && git push $3 $4
endsnippet

snippet "^call" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/
endsnippet

snippet "^setgains" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/gain_manager/set_gains ${2:soft}
endsnippet

snippet "^setconstraints" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/constraint_manager/set_constraints ${2:slow}
endsnippet

snippet "^fuse" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/odometry/change_odometry_source ${1}`!p
snip.rv=complete(t[1], ["gps", "optflow", "rtk", "hector", "brick"])`
endsnippet

snippet "^headless" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/mpc_tracker/headless ${1:0}
endsnippet

snippet "^cbt" "" Ar
catkin build --this
endsnippet

snippet "^"run" two" "" Ar
~/workspace/src/formation_church_planning/simulation_scripts/two_drones_tmuxinator/start.sh
endsnippet

snippet "^"run" three" "" Ar
~/workspace/src/formation_church_planning/simulation_scripts/three_drones_tmuxinator/start.sh
endsnippet

snippet "^"cd" thesis" "" Ar
cd ~/git/Thesis
endsnippet

snippet "^pdflatex" "" Ar
pdflatex --output-dir build ${1:main.tex}
endsnippet

snippet "^papis export " "" Ar
papis export ${2:-a} -f ${3:bibtex} > '${1:papis_export.bib}' && bash ./ppb.sh
endsnippet

snippet "^papis-zotero " "" Ar
papis-zotero import --from-bibtex '${1:main.bib}'
endsnippet

snippet "^papis addto " "" Ar
papis addto '${1:query}' --copy-pdf -f ./${2}
endsnippet

snippet "^papis add " "" Ar
papis add --from ${2:bibtex} '${1:main.bib}'
endsnippet

snippet "^papis open " "" Ar
papis open '${1}'
endsnippet

snippet "^papis edit " "" Ar
papis edit '${1}'
endsnippet

snippet "^control" "" Ar
roslaunch mrs_uav_manager simulation_f550_gps.launch
endsnippet

snippet "^arm" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/mavros/cmd/arming 1
endsnippet

snippet "^offboard" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/mavros/set_mode 0 offboard
endsnippet

snippet "^optflow" "" Ar
roslaunch mrs_optic_flow simulation.launch
endsnippet

snippet "^rviz1" "" Ar
roslaunch mrs_testing rviz_uav1.launch
endsnippet

snippet "^pirouette" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/pirouette
endsnippet

snippet "^simtime" "" Ar
rosparam set use_sim_time true
endsnippet

snippet "^update" "" Ar
sudo apt-get update && rosdep update && sudo apt-get upgrade
endsnippet

snippet "^install" "" Ar
sudo apt-get install
endsnippet

snippet "^garmin" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/odometry/toggle_garmin 0
endsnippet

snippet "^parachute" "" Ar
rosservice call /uav${10:`~/.scripts/get_uav_number.sh`}/control_manager/parachute
endsnippet

snippet "^params" "" Ar
vim <(rosrun mrs_uav_core get_public_params.py)
endsnippet
